/**

برای حل این مسئله، ابتدا باید لباس‌ها را به گروه‌هایی با تعداد متفاوت تقسیم کنیم تا بیشترین تخفیف را بتوانیم اعمال کنیم. برای هر گروه، بسته به تعداد انواع مختلف لباس‌ها، تخفیف خاصی اعمال می‌شود. هدف ما این است که بهینه‌ترین روش برای گروهبندی لباس‌ها را پیدا کنیم تا تخفیف بیشتری اعمال شود.

مراحل راه‌حل:
شمارش تعداد هر نوع لباس.
گروهبندی لباس‌ها به شکلی که تعداد انواع مختلف آنها بیشترین تخفیف را فراهم کند.
محاسبه قیمت نهایی با توجه به تخفیف‌های اعمال شده.

*/

package main

import (
	"fmt"
	"strings"
)

// قیمت هر لباس
const pricePerItem = 8000000

// تخفیف‌های مختلف
var discounts = map[int]float64{
	1: 0.0,  // بدون تخفیف برای یک نوع لباس
	2: 0.05, // 5 درصد تخفیف برای دو نوع لباس مختلف
	3: 0.10, // 10 درصد تخفیف برای سه نوع لباس مختلف
	4: 0.20, // 20 درصد تخفیف برای چهار نوع لباس مختلف
	5: 0.25, // 25 درصد تخفیف برای پنج نوع لباس مختلف
}

// تابع برای محاسبه قیمت نهایی با گروهبندی لباس‌ها
func calculatePrice(clothesCount map[string]int) int {
	totalPrice := 0
	for {
		// هر بار یک گروه از لباس‌های مختلف ایجاد می‌کنیم
		groupSize := 0
		for item := range clothesCount {
			if clothesCount[item] > 0 {
				groupSize++
				clothesCount[item]--
			}
		}

		// اگر گروهی تشکیل نشد، خروج از حلقه
		if groupSize == 0 {
			break
		}

		// قیمت گروه با تخفیف محاسبه می‌شود
		groupPrice := pricePerItem * groupSize
		discount := discounts[groupSize]
		totalPrice += int(float64(groupPrice) * (1 - discount))
	}

	return totalPrice
}

func main() {
	// ورودی نمونه ۱
	input := "shirt,shirt,pants,pants,jacket,jacket,shoes,hoody"
	// ورودی نمونه ۲
	// input := "shirt,pants,shoes,pants,shirt,shirt,jacket,jacket,hoody"

	// تقسیم ورودی به لیست لباس‌ها
	clothes := strings.Split(input, ",")

	// شمارش تعداد هر نوع لباس
	clothesCount := make(map[string]int)
	for _, cloth := range clothes {
		clothesCount[cloth]++
	}

	// محاسبه قیمت نهایی با بیشترین تخفیف
	finalPrice := calculatePrice(clothesCount)
	fmt.Println(finalPrice)
}

/**
شمارش تعداد لباس‌ها: با استفاده از یک دیکشنری (map)، تعداد هر نوع لباس را ذخیره می‌کنیم.
گروهبندی لباس‌ها: در هر دور از حلقه، یک گروه از لباس‌های مختلف تشکیل می‌دهیم و تخفیف مربوط به آن گروه را محاسبه می‌کنیم. این فرآیند را تا زمانی که تمام لباس‌ها به گروه‌ها تقسیم شوند ادامه می‌دهیم.
محاسبه قیمت نهایی: قیمت هر گروه با توجه به تعداد لباس‌های مختلف و تخفیف مربوطه محاسبه شده و به قیمت کل اضافه می‌شود.



رای اطمینان از بیشترین تخفیف، هر بار که گروهی از لباس‌ها را ایجاد می‌کنیم، گروه‌های با تعداد بیشتر لباس‌های مختلف را در اولویت قرار می‌دهیم تا تخفیف بیشتری اعمال شود.
این راه‌حل بهینه بوده و پیچیدگی آن به دلیل محدودیت تعداد لباس‌ها (حداکثر 15) کاملاً مناسب است.
*/
